import tkinter as tk
from tkinter import messagebox

# Dicionário para armazenar usuários cadastrados (simulando um banco de dados simples)
usuarios_cadastrados = {
    "usuario1": "senha1",
    "usuario2": "senha2"
}

# Função para verificar se um usuário existe no banco de dados
def verificar_usuario(email, senha):
    return email in usuarios_cadastrados and usuarios_cadastrados[email] == senha

# Função para realizar o login
def fazer_login():
    email = email_login.get().strip()
    senha = senha_login.get().strip()
    if email and senha:
        if verificar_usuario(email, senha):
            messagebox.showinfo("Login", "Login bem-sucedido!")
        else:
            messagebox.showerror("Erro", "E-mail ou senha incorretos.")
    else:
        messagebox.showwarning("Aviso", "Por favor, preencha todos os campos.")

# Função para abrir a janela de cadastro
def abrir_janela_cadastro():
    def cadastrar_usuario():
        novo_email = email_cadastro.get().strip()
        nova_senha = senha_cadastro.get().strip()
        if novo_email and nova_senha:
            if novo_email in usuarios_cadastrados:
                messagebox.showerror("Erro", "Este e-mail já está em uso. Por favor, escolha outro.")
            else:
                usuarios_cadastrados[novo_email] = nova_senha
                messagebox.showinfo("Cadastro", "Usuário cadastrado com sucesso!")
                janela_cadastro.destroy()
        else:
            messagebox.showwarning("Aviso", "Por favor, preencha todos os campos.")

    janela_cadastro = tk.Toplevel(janela)
    janela_cadastro.title("Cadastro de Usuário")
    janela_cadastro.configure(bg="lightgrey")

    largura_janela_cadastro = 300  # Largura da janela de cadastro
    altura_janela_cadastro = 200  # Altura da janela de cadastro
    largura_tela_cadastro = janela_cadastro.winfo_screenwidth()
    altura_tela_cadastro = janela_cadastro.winfo_screenheight()
    posicao_x_cadastro = (largura_tela_cadastro - largura_janela_cadastro) // 2
    posicao_y_cadastro = (altura_tela_cadastro - altura_janela_cadastro) // 2
    janela_cadastro.geometry(f"{largura_janela_cadastro}x{altura_janela_cadastro}+{posicao_x_cadastro}+{posicao_y_cadastro}")

    frame_cadastro = tk.Frame(janela_cadastro, padx=10, pady=10, bg="lightgrey", relief=tk.SOLID, borderwidth=2, highlightthickness=2, highlightbackground="lightgrey")  # Fundo cinza e bordas arredondadas
    frame_cadastro.pack(expand=True, fill="both")

    tk.Label(frame_cadastro, text="E-mail:", bg="lightgrey", fg="black").grid(row=0, column=0, sticky="w")
    email_cadastro = tk.Entry(frame_cadastro, relief=tk.SOLID, borderwidth=1, highlightthickness=1, highlightbackground="lightgrey")
    email_cadastro.grid(row=0, column=1, padx=5, pady=5, sticky="ew")

    tk.Label(frame_cadastro, text="Senha:", bg="lightgrey", fg="black").grid(row=1, column=0, sticky="w")
    senha_cadastro = tk.Entry(frame_cadastro, show="*", relief=tk.SOLID, borderwidth=1, highlightthickness=1, highlightbackground="lightgrey")
    senha_cadastro.grid(row=1, column=1, padx=5, pady=5, sticky="ew")

    botao_cadastrar = tk.Button(frame_cadastro, text="Cadastrar", bg="#6699CC", fg="white", command=cadastrar_usuario)
    botao_cadastrar.grid(row=2, columnspan=2, pady=10, padx=50, sticky="ew")  

    botao_cadastrar.bind("<Enter>", lambda event: botao_cadastrar.config(bg="lightblue"))
    botao_cadastrar.bind("<Leave>", lambda event: botao_cadastrar.config(bg="#6699CC"))

    janela_cadastro.mainloop()

janela = tk.Tk()
janela.title("Login")

largura_janela = 400  # Largura aumentada
altura_janela = 300  # Altura aumentada para mais da metade da tela
largura_tela = janela.winfo_screenwidth()
altura_tela = janela.winfo_screenheight()
posicao_x = (largura_tela - largura_janela) // 2
posicao_y = (altura_tela - altura_janela) // 2
janela.geometry(f"{largura_janela}x{altura_janela}+{posicao_x}+{posicao_y}")

# Frames para organização
frame_caixa = tk.Frame(janela, padx=10, pady=10, bg="#333333", relief=tk.SOLID, borderwidth=2, highlightthickness=2, highlightbackground="#333333")  # Fundo dark e bordas arredondadas
frame_caixa.pack(expand=True)

frame_login = tk.Frame(frame_caixa, bg="#333333")  # Fundo dark
frame_login.pack(expand=True, fill="both")

tk.Label(frame_login, text="E-mail:", bg="#333333", fg="white").grid(row=0, column=0, sticky="w")
email_login = tk.Entry(frame_login, relief=tk.SOLID, borderwidth=1, highlightthickness=1, highlightbackground="#333333")
email_login.grid(row=0, column=1, padx=5, pady=5, sticky="ew")

tk.Label(frame_login, text="Senha:", bg="#333333", fg="white").grid(row=1, column=0, sticky="w")
senha_login = tk.Entry(frame_login, show="*", relief=tk.SOLID, borderwidth=1, highlightthickness=1, highlightbackground="#333333")
senha_login.grid(row=1, column=1, padx=5, pady=5, sticky="ew")

# Botões de login e cadastro
frame_botoes = tk.Frame(frame_caixa, bg="#333333")  # Fundo dark
frame_botoes.pack(expand=True, fill="both")

botao_login = tk.Button(frame_botoes, text="Login", bg="#6699CC", fg="white", command=fazer_login, width=10)
botao_login.pack(side="left", padx=5, pady=10, expand=True)

botao_cadastro = tk.Button(frame_botoes, text="Cadastro", bg="#6699CC", fg="white", command=abrir_janela_cadastro, width=10)
botao_cadastro.pack(side="right", padx=5, pady=10, expand=True)

# Adicionando eventos para mudar a aparência dos botões quando o cursor do mouse passa por cima deles
botao_login.bind("<Enter>", lambda event: botao_login.config(bg="lightblue"))
botao_login.bind("<Leave>", lambda event: botao_login.config(bg="#6699CC"))
botao_cadastro.bind("<Enter>", lambda event: botao_cadastro.config(bg="lightblue"))
botao_cadastro.bind("<Leave>", lambda event: botao_cadastro.config(bg="#6699CC"))

janela.mainloop()